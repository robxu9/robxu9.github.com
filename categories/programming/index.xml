<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Programming on Robert Xu</title>
    <link>https://www.robxu9.com/categories/programming/</link>
    <description>Recent content in Programming on Robert Xu</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <managingEditor>me@robxu9.com (Robert Xu)</managingEditor>
    <webMaster>me@robxu9.com (Robert Xu)</webMaster>
    <copyright>Â© 2014-2017 Robert Xu. All Rights Reserved. Content not indicative of any addl party.</copyright>
    <lastBuildDate>Mon, 08 Feb 2016 19:49:28 -0500</lastBuildDate>
    
	<atom:link href="https://www.robxu9.com/categories/programming/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>do cleanups, not rewrites</title>
      <link>https://www.robxu9.com/2016/02/do-cleanups-not-rewrites/</link>
      <pubDate>Mon, 08 Feb 2016 19:49:28 -0500</pubDate>
      <author>me@robxu9.com (Robert Xu)</author>
      <guid>https://www.robxu9.com/2016/02/do-cleanups-not-rewrites/</guid>
      <description>I&amp;rsquo;ve had an application that&amp;rsquo;s been going on for about 3 years now. Kahinah was built to manage package updates for OpenMandriva Lx. I wrote it, did incremental updates to it, declared it a horrible mess and that I would rewrite it. Then never touched it for nearly two years.
The problem with rewrites is that you&amp;rsquo;re going into the mentality that you&amp;rsquo;re going to throw away all your code and restart from scratch; consequently, you can redo the whole structure of your app, make it all nice, neat, and everything looks nice.</description>
    </item>
    
    <item>
      <title>duplex in C, take two</title>
      <link>https://www.robxu9.com/2015/01/duplex-in-c-take-two/</link>
      <pubDate>Sat, 17 Jan 2015 00:09:29 -0600</pubDate>
      <author>me@robxu9.com (Robert Xu)</author>
      <guid>https://www.robxu9.com/2015/01/duplex-in-c-take-two/</guid>
      <description>I seem to be doing a bunch of rewrites of my older projects nowadays. But sometimes that&amp;rsquo;s necessary. It is for the case of duplex (and libduplex).
Background When I was working at DigitalOcean over the past summer, my main project was a communication framework called duplex. Duplex&amp;rsquo;s aim was to create a simple messaging framework that could potentially be used for RPC. The first version was prototyped in Go, and I created libdpx, which was the first version in C.</description>
    </item>
    
    <item>
      <title>valgrind is important</title>
      <link>https://www.robxu9.com/2014/08/valgrind-is-important/</link>
      <pubDate>Tue, 05 Aug 2014 00:00:00 +0000</pubDate>
      <author>me@robxu9.com (Robert Xu)</author>
      <guid>https://www.robxu9.com/2014/08/valgrind-is-important/</guid>
      <description>Most people have heard of debugging tools like gdb. For the rest, it&amp;rsquo;s usually just continuous testing and catching problems with your eye. But sometimes it&amp;rsquo;s not that simple.
Take for example (and I&amp;rsquo;ve been using this example a lot), libdpx. I was trying to clean up the code for the past two days, but when I moved a simple statement that should work, everything essentially went to hell. You can see that commit here.</description>
    </item>
    
    <item>
      <title>stdout is slow</title>
      <link>https://www.robxu9.com/2014/08/stdout-is-slow/</link>
      <pubDate>Fri, 01 Aug 2014 00:00:00 +0000</pubDate>
      <author>me@robxu9.com (Robert Xu)</author>
      <guid>https://www.robxu9.com/2014/08/stdout-is-slow/</guid>
      <description>Reading or writing any sort of stream can be slow. I cannot stress how much that is true.
It&amp;rsquo;s incredibly noticeable, especially when you have some sort of GUI program in debug mode and it prints out a load of stuff. Each printout, whether it&amp;rsquo;s piped somewhere else or goes to the console, can add time that matters to your program&amp;rsquo;s execution.
Why bring it up now? Take for example, libdpx.</description>
    </item>
    
    <item>
      <title>ctypes, Why?</title>
      <link>https://www.robxu9.com/2014/07/ctypes-why/</link>
      <pubDate>Wed, 30 Jul 2014 00:00:00 +0000</pubDate>
      <author>me@robxu9.com (Robert Xu)</author>
      <guid>https://www.robxu9.com/2014/07/ctypes-why/</guid>
      <description>I don&amp;rsquo;t claim to be a particularly good Python programmer at all. I&amp;rsquo;m probably one of the&amp;hellip; less useful people to program Python - I much prefer Go (and to be rather honest, C).
But I think I&amp;rsquo;ve encountered the nastiest piece of library I&amp;rsquo;ve used with Python - ctypes.
What is ctypes? It&amp;rsquo;s kind of like the psuedo C package for Go - it allows direct access to C functions and structures and all those nice things, and lets you use C libraries in your Python program.</description>
    </item>
    
  </channel>
</rss>